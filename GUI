local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Lvsyyy/UI/main/Library"))()
local Window = Library:CreateWindow("Obby Master ðŸ˜Ž ", "Version: 1", 10044538000)
local Tab = Window:CreateTab("Functions")
local Page1 = Tab:CreateFrame("Universal")
local Page2 = Tab:CreateFrame("Dollhouse")
local Page3 = Tab:CreateFrame("Rate My Avatar")
local Page9 = Tab:CreateFrame("Fun")
local Page10 = Tab:CreateFrame("Credits")

Page1:CreateSlider("Walkspeed", 1, 100, function(value)
    game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
end)
Page1:CreateSlider("Jumppower", 1, 500, function(value2)
    game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value2
end)
Page1:CreateSlider("Gravity", 0, 500, function(value3)
    game.Workspace.Gravity = value3
end)

Button = Page1:CreateButton("Reset Stats", "Makes all your values reset to normal", function()
    local value = true
        if value == true then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
            game.Workspace.Gravity = 196.19999694824
        end
end)
Label = Page1:CreateLabel("")
Button = Page1:CreateButton("Rejoin", "Click here to rejoin!", function()
    local value = true
        if value == true then
        local placeId = game.PlaceId
        local jobId = game.JobId
            game:GetService("TeleportService"):TeleportToPlaceInstance(placeId, jobId, player)  
        end
end)
Button = Page1:CreateButton("Serverhop", "Joins a different serrver.", function()
    local value = true
        if value == true then
            local PlaceID = game.PlaceId
            local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"))
            for i,v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
end)
Label = Page1:CreateLabel("")
TextBox = Page1:CreateBox("Type in target here.", 10044538000, function(arg)
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        if string.lower(arg) == string.lower(player.Name) or string.find(string.lower(player.Name), string.lower(arg)) or string.lower(arg) == string.lower(player.DisplayName) or string.find(string.lower(player.DisplayName), string.lower(arg)) then
            playerName = player.Name
            break
        end
    end
end)
playerName = ""
Button = Page1:CreateButton("Move to player", "Will make you move to the target.", function()
    local value = true
    if value == true and playerName ~= "" then
        print(playerName)
        local targetPlayer = game:GetService("Players"):FindFirstChild(playerName)
        if targetPlayer then
            local player = game:GetService("Players").LocalPlayer
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid:IsA("Humanoid") then
                humanoid:MoveTo(targetPlayer.Character.HumanoidRootPart.Position)
            end
        end
    end
end)
Label = Page1:CreateLabel("")
Button = Page2:CreateButton("Anti-Bots", "Removes current known bots. Press only once!", function()
    local value = true
        if value == true then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Lvsyyy/DH/main/Anti-Bots"))()
        end
end)
Button = Page2:CreateButton("Earrape", "Plays an ID in a loop", function()
    local value = true
        if value == true then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Lvsyyy/DH/main/Earrape"))()
        end
end)
Label = Page2:CreateLabel("")
Button = Page3:CreateButton("Fast Refresh", "Press R to refresh your character", function()
    local value = true
        if value == true then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Lvsyyy/RMA/main/Reset"))()
        end
end)
Button = Page3:CreateButton("Image Sign", "Press to get an Image Sign (gamepass required)", function()
    local value = true
        if value == true then
        game:GetService("ReplicatedStorage"):WaitForChild("RequestGamepassTool"):FireServer(17291427)
        end
end)
Label = Page3:CreateLabel("Ratings! Cooldown: 1 minute")
Page3:CreateSlider("Rated Stars", 1, 5, function(value4)
    g = value4
end)
Button = Page3:CreateButton("Rate Everyone", "Rates everyone! Using the Slider!", function()
    local value = true
        if value == true then
            local players = game:GetService("Players"):GetPlayers()
            for _, player in ipairs(players) do
                game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, g)
            end
        end
end)
Label = Page3:CreateLabel("For accurate ratings use this.")
Button = Page3:CreateButton("Rate Everyone 1 Star", "Rates everyone with 1 star", function()
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 1)
    end
end)

Button = Page3:CreateButton("Rate Everyone 2 Stars", "Rates everyone with 2 stars", function()
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 2)
    end
end)

Button = Page3:CreateButton("Rate Everyone 3 Stars", "Rates everyone with 3 stars", function()
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 3)
    end
end)

Button = Page3:CreateButton("Rate Everyone 4 Stars", "Rates everyone with 4 stars", function()
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 4)
    end
end)

Button = Page3:CreateButton("Rate Everyone 5 Stars", "Rates everyone with 5 stars", function()
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 5)
    end
end)
Label = Page3:CreateLabel("Doesn't need the full user or display name!")
TextBox = Page3:CreateBox("Type in target here.", 10044538000, function(arg)
    local players = game:GetService("Players"):GetPlayers()
    for _, player in ipairs(players) do
        if string.lower(arg) == string.lower(player.Name) or string.find(string.lower(player.Name), string.lower(arg)) or string.lower(arg) == string.lower(player.DisplayName) or string.find(string.lower(player.DisplayName), string.lower(arg)) then
            playerName = player.Name
            break
        end
    end
end)
playerName = ""
Button = Page3:CreateButton("Auto Rater", "Click to auto rate the target.", function()
    if buttonActive and playerName ~= "" then
        while _G. test == true do
            wait(10)
            print(playerName)
            game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(game:GetService("Players"):WaitForChild(playerName), 5)
        end
    end
end)
Toggle = Page3:CreateToggle("Auto Rater toggler", "Switch the auto rater on and off.", function(state)
    if state == true then
        buttonActive = true
        print("Button activated")
        _G.test = true
    else
        buttonActive = false
        print("Button deactivated")
        _G.test = false
    end
end)
Label = Page3:CreateLabel("")
Button = Page3:CreateButton("Rating Bomber", "Makes everyones last rating weird", function()
    local value = true
        if value == true then
            local players = game:GetService("Players"):GetPlayers()
            for _, player in ipairs(players) do
                game:GetService("ReplicatedStorage"):WaitForChild("PostRating"):FireServer(player, 4.69696969696969)
            end
        end
end)
Label = Page3:CreateLabel("")
Button = Page9:CreateButton("Tiny", "R15 ONLY! Make your scale values the lowest", function()
    local value = true
        if value == true then
        local LocalPlayer = game:GetService("Players").LocalPlayer
        local Character = LocalPlayer.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")

        local function rm()
            for i,v in pairs(Character:GetDescendants()) do
                if v:IsA("BasePart") then
                if v.Name ~= "Head" then
            for i,cav in pairs(v:GetDescendants()) do
                if cav:IsA("Attachment") then
                if cav:FindFirstChild("OriginalPosition") then
            cav.OriginalPosition:Destroy()
                end
            end
        end
                v:FindFirstChild("OriginalSize"):Destroy()
                    if v:FindFirstChild("AvatarPartScaleType") then
                        v:FindFirstChild("AvatarPartScaleType"):Destroy()
                        end
                    end
                end
            end
        end
    wait(0.5)
        Humanoid:FindFirstChild("HeadScale"):Destroy()
    wait(1)
    rm()
    wait(0.5)
        Humanoid:FindFirstChild("BodyTypeScale"):Destroy()
    wait(1)
    rm()
    wait(0.5)
        Humanoid:FindFirstChild("BodyWidthScale"):Destroy()
    wait(1)
    rm()
    wait(0.5)
        Humanoid:FindFirstChild("BodyDepthScale"):Destroy()
    wait(1)
end
end)
Label = Page9:CreateLabel("")
Page9:CreateSlider("Speed Changer", 15, 150, function(value5)
    g1 = value5
end)
Button = Page9:CreateButton("Ball", "Makes you be a ball. | Normal speed is 30", function()
    local value = true
        if value == true then
            SPEED_MULTIPLIER = g1
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Lvsyyy/Fun/main/Ball"))()
        end
end)
Label = Page9:CreateLabel("")

Label = Page10:CreateLabel("Dev: Lvs_y")
Label = Page10:CreateLabel("Tester: Lvs_y | INXANITTY")
